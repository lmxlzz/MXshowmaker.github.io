<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs of Mingxian</title>
    <link>/</link>
    <description>Recent content on Blogs of Mingxian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 23 Oct 2021 14:03:22 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Line Rendering in Blender</title>
      <link>/post/2021/10/line-rendering-in-blender/</link>
      <pubDate>Sat, 23 Oct 2021 14:03:22 +0800</pubDate>
      
      <guid>/post/2021/10/line-rendering-in-blender/</guid>
      <description>前言 **目的：**由于自己存在需求，要将3D shape渲染为线稿图。 查阅了相关资料后，发现2005年的SIG中有一个比较想要的做法，Line</description>
    </item>
    
    <item>
      <title>Gather Scatter的使用</title>
      <link>/post/2021/10/gather%E4%B8%8Escatter%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 22 Oct 2021 23:13:51 +0800</pubDate>
      
      <guid>/post/2021/10/gather%E4%B8%8Escatter%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>gather-scatter 的使用 scatter 在pytorch中，scatter是一个非常实用的映射函数，其将一个源张量（source）中的值按照指定的轴方向（dim）和对应的</description>
    </item>
    
    <item>
      <title>SSH远程</title>
      <link>/post/2021/07/ssh%E8%BF%9C%E7%A8%8B/</link>
      <pubDate>Fri, 09 Jul 2021 21:54:57 +0800</pubDate>
      
      <guid>/post/2021/07/ssh%E8%BF%9C%E7%A8%8B/</guid>
      <description>SSH 远程 目标：跳板机是win10，目标机器是Linux。 win10由于在所里，无法直接访问，这里找实验室的师兄帮忙做了一个端口映射，可以从外网</description>
    </item>
    
    <item>
      <title>Intro2python_part4</title>
      <link>/post/2021/07/intro2python_part4/</link>
      <pubDate>Thu, 01 Jul 2021 10:44:50 +0800</pubDate>
      
      <guid>/post/2021/07/intro2python_part4/</guid>
      <description>捕获异常 try: pass except 错误类型1： pass except (错误类型2， 错误类型3)： pass except Exception as result: print(&amp;#39;未知错误 %s&amp;#39; %(result, )) else: # 没有异常才会被执行。 pass finally: # 不管对</description>
    </item>
    
    <item>
      <title>Intro2python_part3</title>
      <link>/post/2021/07/intro2python_part3/</link>
      <pubDate>Thu, 01 Jul 2021 10:44:48 +0800</pubDate>
      
      <guid>/post/2021/07/intro2python_part3/</guid>
      <description>类与print print 类的对象变量，默认情况下是输出这个变量 **引用的对象 **是 由哪一个类创建的对象。 以及在内存中的地址（16进制） 类的声明 Tom = Cat()</description>
    </item>
    
    <item>
      <title>Intro2python_part2</title>
      <link>/post/2021/07/intro2python_part2/</link>
      <pubDate>Thu, 01 Jul 2021 10:44:46 +0800</pubDate>
      
      <guid>/post/2021/07/intro2python_part2/</guid>
      <description>pyc文件 python compiled 不需要每次运行的时候重新翻译 缓存文件 二进制 称为字节码 del 本质上上将变量从内存中删除 list &amp;amp; tuple list 通常保存相同类型数据 tuple 通常保存不同数据</description>
    </item>
    
    <item>
      <title>Intro2python_part1</title>
      <link>/post/2021/07/intro2python_part1/</link>
      <pubDate>Thu, 01 Jul 2021 10:44:43 +0800</pubDate>
      
      <guid>/post/2021/07/intro2python_part1/</guid>
      <description>内核 和 发行版 发行版： centOS, ubuntu redhat 内核只有一个。发行版是基于内核开发的包括图形化界面以及一些运用软件的软件。 终端命令 命令行放大缩小 放大：cmd+sh</description>
    </item>
    
    <item>
      <title>A First Course in Probability - part 2</title>
      <link>/post/2021/05/a_first_course_in_probability_9th_2/</link>
      <pubDate>Fri, 07 May 2021 15:12:05 +0800</pubDate>
      
      <guid>/post/2021/05/a_first_course_in_probability_9th_2/</guid>
      <description>前言 ch4 ch5 Ch4~5小结</description>
    </item>
    
    <item>
      <title>A First Course in Probability - part 1</title>
      <link>/post/2021/04/a_first_course_in_probability_9th_1/</link>
      <pubDate>Thu, 29 Apr 2021 02:40:23 +0800</pubDate>
      
      <guid>/post/2021/04/a_first_course_in_probability_9th_1/</guid>
      <description>前言 由于对于概率论的基础存在需求，这里重新回顾一下之前所学的概率论。使用《概率论基础教程》一书，这里记录一下阅读笔记和一些个人的思考。 part 1 记</description>
    </item>
    
    <item>
      <title>理解pytorch算子的使用</title>
      <link>/post/2021/04/%E7%90%86%E8%A7%A3pytorch%E7%AE%97%E5%AD%90%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 29 Apr 2021 01:43:40 +0800</pubDate>
      
      <guid>/post/2021/04/%E7%90%86%E8%A7%A3pytorch%E7%AE%97%E5%AD%90%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>torch.gather 官方文档 API接口：torch.gather(input, dim, index, *, sparse_grad=False, out=None) → Tensor 按照index，在dim维度中取出 input的值到out上。这里o</description>
    </item>
    
    <item>
      <title>Convolutional Occupancy Networks </title>
      <link>/post/2021/04/convolutional_occupancy_networks/</link>
      <pubDate>Tue, 20 Apr 2021 22:35:42 +0800</pubDate>
      
      <guid>/post/2021/04/convolutional_occupancy_networks/</guid>
      <description>相关信息 Title: Convolutional Occupancy Networks Link: https://arxiv.org/abs/2003.04618 Github Link: https://github.com/autonomousvision/convolutional_occupancy_networks 收录于 ECCV20 Motivation 这篇文章是在他们组之前工作 Occupancy Networks: Learning 3D Reconstruction in Function Space 的基础上加入卷积操作的升级版。 之前的一些在隐势场上的工作如： IM-Net,</description>
    </item>
    
    <item>
      <title>GLOW</title>
      <link>/post/2021/04/glow/</link>
      <pubDate>Sat, 17 Apr 2021 23:15:39 +0800</pubDate>
      
      <guid>/post/2021/04/glow/</guid>
      <description>背景知识 判别模型 vs 生成模型 数值计算 &amp;amp; 采样计算 见过最直观的关于vae的解释变分自编码器介绍、推导及实现 苏剑林 content 知乎real-NVP 里面的【Re</description>
    </item>
    
    <item>
      <title>Hugo 搭建个人博客 —- My first post</title>
      <link>/post/my_first_post/</link>
      <pubDate>Sat, 17 Apr 2021 14:34:30 +0800</pubDate>
      
      <guid>/post/my_first_post/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
